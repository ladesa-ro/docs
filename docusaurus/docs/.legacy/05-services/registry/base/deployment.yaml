apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: registry
    spec:
      volumes:
        - name: registry-artifacts-vol
          persistentVolumeClaim:
            claimName: registry-artifacts-pvc
        - name: registry-certs-vol
          persistentVolumeClaim:
            claimName: registry-certs-pvc
        - name: registry-config-map-vol
          configMap:
            name: registry-config-map
      containers:
        - name: registry
          image: "registry:2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 5000
          volumeMounts:
            - name: registry-artifacts-vol
              mountPath: /data
            - name: registry-certs-vol
              mountPath: /opt/certs
            - name: registry-config-map-vol
              mountPath: /etc/docker/registry/config.yml
              subPath: registry-config.yaml
          resources:
            limits:
              cpu: "0.5"
              memory: "1Gi"
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 15
          startupProbe:
            httpGet:
              path: /
              port: 5000
            failureThreshold: 30
            periodSeconds: 10
