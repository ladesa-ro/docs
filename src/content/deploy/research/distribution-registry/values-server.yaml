replicaCount: 1

image:
  repository: registry
  pullPolicy: Always
  tag: "2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}
securityContext: {}

probe:
  enabled: true

service:
  type: ClusterIP
  port: 80
  containerPort: 5000

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: public
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header Origin https://registry.example.com;
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - host: registry.kluster.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # tls:
  #   - secretName: tls-secret-registry
  #     hosts:
  #       - registry.kluster.local

resources: {}

autoscaling:
  enabled: false

nodeSelector: {}
tolerations: []
affinity: {}

config:
  - name: registry-config
    data:
      - key: REGISTRY_AUTH_TOKEN_REALM
        value: https://sso.ladesa.com.br/realms/registry/protocol/docker-v2/auth
      - key: REGISTRY_AUTH_TOKEN_SERVICE
        value: docker-registry
      - key: REGISTRY_AUTH_TOKEN_ISSUER
        value: https://sso.ladesa.com.br/realms/registry

pvc:
  enabled: true
  config:
    - name: registry
      accessMode: ReadWriteMany
      storage:
        size: 40Gi
      mount:
        path: /var/lib/registry

envconf:
  enabled: true
  config:
    - name: registry-htpasswd
      target: registry-htpasswd
      key: passwd
      subPath: htpasswd
